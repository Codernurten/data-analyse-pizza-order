select*from customers
  
  #Join customers and orders to list customer names with their order details.
  select name, order_date from customers c
  join `orders (1)` o on c.customer_id=o.customer_id
  
  #List all unique cities where customers live.
  
select distinct city from customers 


#Count how many orders each customer has placed.
select name, count(order_id) from customers c
join `orders (1)` o on o.customer_id=c.customer_id
group by name

#Count the number of customers per city.
select count(customer_id), city from customers
group by city 

#Calculate the average order amount.
select avg(amount) from `orders (1)`

#Find the highest order amount and the name of the customer who placed it.
select name, amount from customers c
join `orders (1)` o on o.customer_id=c.customer_id
order by amount desc
limit 1

#Show total amount spent by each customer, sorted from highest to lowest.
select sum(amount) as total, name from customers c join `orders (1)` o on 
c.customer_id=o.customer_id
group by name
order by total desc



#Group orders by month and show total orders and total amount per month.

select count(order_id),MONTH(order_date) as o_date, sum(amount) as amounts
 from `orders (1)` 
group by MONTH(order_date) 
order by o_date desc

#Find all customers who have never placed an order.
SELECT c.*
FROM customers c
LEFT JOIN `orders (1)` o ON c.customer_id = o.customer_id
WHERE o.order_id IS NULL;

#list orders with amount greater than the average, and show the customer names.
select c.name, o.order_id from customers c inner join join `orders (1)` o
on c.customer_id=o.order_id
where amount> (SELECT AVG(amount) FROM `orders (1)` o)


Find the most recent order date for each customer.

select c.customer_id,name, max(order_date) as dt from customers c join `orders (1)` o on c.customer_id=o.customer_id
group by name,c.customer_id
